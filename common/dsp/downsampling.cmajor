// Tote Bag Labs 2024

/** A zero order hold downsampling effect.

    It works by multiplying input with a Band Limited Impulse Train (BLIT).
    This allows us to simulate analog to digital conversion at whatever frequency we want.

    From personal communication with Geraint Luft (Signalsmith):

    A good way to think about sampling is that you're multiplying the input signal
    by a series of pulses, with zeroes in between them. This gives you can output which
    only "exists" at specific points in time, and produces duplicate spectra in the
    frequency domain (multiplication in time = convolution in frequency).

    The effect we are looking for involves creating duplicate spectra for low sample
    sample rates: the digital dirt we love in vintage samplers. However, this operation
    also causes aliasing close to the host sample rate. We don't want this, so this processor
    should be run with at least 2x oversampling.
*/
processor downsampleBlit (using FrameType = float32)
{
    input stream FrameType in;
    output stream FrameType out;

    input event float frequency [[ name: "Frequency", min: 100.0f, max: 44100.0f, init: 44100.0f]];

    event frequency(float f)
    {
        blit.frequency <- f;
    }

    node blit = stkBlitOscillator(float32);
   
    void main()
    {
        loop
        {
           out <- in * blit.out;

           blit.advance();
           advance();
        }
    }
}
