
/*
    This file was auto-generated by the cmaj VScode extension!
    https://cmajor.dev
*/

// Here's a very simple graph that plays a sine-wave to get you started..
processor sample_and_hold  [[ main ]]
{
    input stream float in;
    output stream float out;
    input value float frequency [[ name: "Frequency", min: 100.0f, max: 44100.0f, init: 44100.0f ]];

    // This is our processor's entry-point function, which is invoked
    // by the system
    void main()
    {
        loop
        {
            increment = frequency / float32(processor.frequency);
            phase += increment;
            
            // sample and hold
            if (phase >= 1.0f)
            {
                sampledInput = in;
                phase -= 1.0f;
            }
            
            out <- sampledInput;

            // decimate
            // if (phase >= 1.0f)
            // {
            //     out <- in;
            //     phase -= 1.0f;
            // }
            
            out <- 0.0f;

            advance();
        }
    }

    float phase;
    float sampledInput;
    float increment;
}

// tick(input)
// {
//     increment = downsampleRate / hostSampleRate;
//     phase += increment;

//     if (phase >= 1.0)
//     {
//         sampledInput = input;
//         phase -= 1.0;
//     }

//     return sampledInput;
// }